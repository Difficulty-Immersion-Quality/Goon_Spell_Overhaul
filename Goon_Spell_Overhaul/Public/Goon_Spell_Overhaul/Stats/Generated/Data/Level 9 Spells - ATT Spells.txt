// ==================================== Prismatic Wall ====================================
// TODO: Evasion support same as Wall of Fire.
// TODO: Use ",,0,,false,false,false,true" on the damage, with conditions checking for if summoner source has matching Elemental Adept. Next, pray that it works when the status isn't directly from the caster/summon, but a chain.
// TODO: Maybe make it more interesting by randomising the status application order, not hard to do.

// new entry "ATT_WALLOFPRISM_AURA"
// type "StatusData"
// data "StatusType" "BOOST"
// using "WALLOFFIRE_AURA"
// data "DisplayName" "h0a1fb862gd7abg5217g07cbg5ad0acd84cae;1"
// data "Description" "had6ce2bagdfa4g870dgd835g45d078c15446;1"
// data "DescriptionParams" "DealDamage(10d6,Fire)"
// data "StackId" "WALLOFPRISM"
// data "StackPriority" "1"
// data "StackType" "Overwrite"
// data "TooltipDamage" "DealDamage(10d6,Fire)"
// data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;InitiateCombat;BringIntoCombat"
// data "OnApplyRoll" "not SavingThrow(Ability.Dexterity,OwnerSourceSpellDC())" //TODO: Wouldn't this implementation have the same redundant saving throw issue? Why isn't the below technical included here instead/in addition?
// data "OnApplySuccess" "IF(not HasStatus('ATT_PRISMWALL_TECHNICAL')):DealDamage(10d6,Fire,Magical);IF(not HasStatus('ATT_PRISMWALL_TECHNICAL')):ApplyStatus(ATT_WALL_ORANGE,100,1);"
// data "OnApplyFail" "DealDamage((10d6)/2,Fire,Magical); ApplyStatus(ATT_WALL_ORANGE,100,1)"
// data "OnTickRoll" ""
// data "OnTickSuccess" ""
// data "OnTickFail" ""

// new entry "ATT_WALL_ORANGE"
// type "StatusData"
// data "StatusType" "BOOST"
// using "ATT_WALLOFPRISM_AURA"
// data "DisplayName" "hba253155ga366gf662gc47cg7b42f3750f8f;1"
// data "Description" "h94745f5dg9d10g2c5ag8897g5b42be39d29a;1"
// data "DescriptionParams" "DealDamage(10d6,Acid)"
// data "Icon" "GenericIcon_DamageType_Acid"
// data "StackPriority" "2"
// data "TooltipDamage" "DealDamage(10d6,Acid)"
// data "OnApplySuccess" "DealDamage(10d6,Acid,Magical);ApplyStatus(ATT_WALL_YELLOW,100,1)"
// data "OnApplyFail" "DealDamage((10d6)/2,Acid,Magical); ApplyStatus(ATT_WALL_YELLOW,100,1)"

// new entry "ATT_WALL_YELLOW"
// type "StatusData"
// data "StatusType" "BOOST"
// using "ATT_WALLOFPRISM_AURA"
// data "DisplayName" "h607016fagcc08g4a10g3adbg6fc4ad7bf0cb;1"
// data "Description" "h7fffb157gd64dg2accgaedbg55608a36c6df;1"
// data "DescriptionParams" "DealDamage(10d6,Lightning)"
// data "Icon" "GenericIcon_DamageType_Lightning"
// data "StackPriority" "3"
// data "TooltipDamage" "DealDamage(10d6,Lightning)"
// data "OnApplySuccess" "DealDamage(10d6,Lightning,Magical);ApplyStatus(ATT_WALL_GREEN,100,1)"
// data "OnApplyFail" "DealDamage((10d6)/2,Lightning,Magical); ApplyStatus(ATT_WALL_GREEN,100,1)"

// new entry "ATT_WALL_GREEN"
// type "StatusData"
// data "StatusType" "BOOST"
// using "ATT_WALLOFPRISM_AURA"
// data "DisplayName" "h87662293geb23g7724ge268g9462e4ee6c13;1"
// data "Description" "h49d58c63g5240g89b2g0bc4gec08d4b0a8b1;1"
// data "DescriptionParams" "DealDamage(10d6,Poison)"
// data "Icon" "GenericIcon_DamageType_Poison"
// data "StackPriority" "4"
// data "TooltipDamage" "DealDamage(10d6,Poison)"
// data "OnApplySuccess" "DealDamage(10d6,Poison,Magical);ApplyStatus(ATT_WALL_BLUE,100,1)"
// data "OnApplyFail" "DealDamage((10d6)/2,Poison,Magical); ApplyStatus(ATT_WALL_BLUE,100,1)"

// new entry "ATT_WALL_BLUE"
// type "StatusData"
// data "StatusType" "BOOST"
// using "ATT_WALLOFPRISM_AURA"
// data "DisplayName" "hab27ec80gbdd3g995agf135g6340c8a0c4ef;1"
// data "Description" "hadc5c9c2gdd57g26bdg4e8ag43039f337d8f;1"
// data "DescriptionParams" "DealDamage(10d6,Cold)"
// data "Icon" "GenericIcon_DamageType_Cold"
// data "StackPriority" "5"
// data "TooltipDamage" "DealDamage(10d6,Cold)"
// data "OnApplySuccess" "DealDamage(10d6,Cold,Magical);ApplyStatus(ATT_WALL_INDIGO,100,1)"
// data "OnApplyFail" "DealDamage((10d6)/2,Cold,Magical); ApplyStatus(ATT_WALL_INDIGO,100,1)"

// new entry "ATT_WALL_INDIGO"
// type "StatusData"
// data "StatusType" "BOOST"
// using "ATT_WALLOFPRISM_AURA"
// data "DisplayName" "hecb1a3fcgbfbdgbc6dg814ag856bc0f1b788;1"
// data "Description" "h69faf4dbga4c3g1025g8fa6gdede5a1a03d3;2"
// data "Icon" "Spell_Transmutation_FleshToStone"
// data "StackPriority" "6"
// data "TooltipDamage" ""
// data "OnApplySuccess" "ApplyStatus(PRM_INDIGO_1,100,1);ApplyStatus(ATT_WALL_VIOLET,100,1)"
// data "OnApplyFail" "ApplyStatus(ATT_WALL_VIOLET,100,1)"

// new entry "ATT_WALL_VIOLET"
// type "StatusData"
// data "StatusType" "BOOST"
// using "ATT_WALLOFPRISM_AURA"
// data "DisplayName" "h01c9162eg1546g6e09g3f1bg8da85c7ed3cd;1"
// data "Description" "h097580e5g1df1gb3e2g65e0gc285aae6a575;2"
// data "Icon" "Spell_Abjuration_Banishment"
// data "StackPriority" "7"
// data "TooltipDamage" ""
// data "OnApplySuccess" "ApplyStatus(PRISMATIC_BANISH_1,100,1);IF(not HasStatus('ATT_PRISMWALL_TECHNICAL')):ApplyStatus(ATT_PRISMWALL_TECHNICAL,100,1)"
// data "OnApplyFail" "IF(not HasStatus('ATT_PRISMWALL_TECHNICAL')):ApplyStatus(ATT_PRISMWALL_TECHNICAL,100,1)"