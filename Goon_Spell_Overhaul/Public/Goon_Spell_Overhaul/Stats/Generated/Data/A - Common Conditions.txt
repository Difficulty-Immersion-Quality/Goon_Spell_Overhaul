// ==================================== Acid ====================================
// Bug Fix: Now ignores resting like other conditions.

new entry "ACID"
type "StatusData"
data "StatusType" "BOOST"
using "ACID"
// // Acid
// data "DisplayName" "h56c56f38g0456g4531gb95dg67fb3e88f107;1"
// // Reduces <LSTag Tooltip="ArmourClass">Armour Class</LSTag> by 2.
// data "Description" "h24742bb9g049fg4c09gb68eg4be61b2657df;1"
// data "Icon" "Status_Acid"
// data "HitAnimationType" "MagicalDamage_External"
// data "SoundStart" "Misc_Status_Acid_Enter"
// data "SoundLoop" "Misc_Status_Acid_MO"
// data "SoundStop" "Misc_Status_Acid_MO_Stop"
// data "OnApplyConditions" "not Item(context.Source)"
// data "StackId" "ACID"
// data "TickType" "StartTurn"
// data "Boosts" "AC(-2)"
// data "StatusPropertyFlags" "InitiateCombat"
data "StatusPropertyFlags" "InitiateCombat;IgnoreResting"
// data "StatusGroups" "SG_Surface"
// data "StatusEffect" "4ca0dc53-1568-4bfd-8680-67086fea6451"

// ==================================== Burning ====================================
// Changes: Damage is based on duration, increasing by 1d4 for each round left on the target up to a maximum of 10d4 for 10+ rounds.

new entry "BURNING"
type "StatusData"
data "StatusType" "BOOST"
using "BURNING"
// // Burning
// data "DisplayName" "h978e1507gf90eg49b5ga5f8g5b1c0548d77f;1"
// // Takes [1] per turn.
// data "Description" "h749103c1g241dg4d07g923eg977717a2d981;4"
// Takes [1] per turn for each round of Burning on the target.
data "Description" "h67f4f865g2bf9g4282g9cadg85f6fdea55b1;1"
// data "DescriptionParams" "DealDamage(1d4,Fire)"
// data "Icon" "Status_Burning"
// data "FormatColor" "Fire"
// data "HitAnimationType" "MagicalDamage_External"
// data "SoundLoop" "Misc_Status_Burning_MO"
// data "SoundStop" "Misc_Status_Burning_MO_Stop"
// data "StackId" "BURNING"
data "StackType" "Additive"
data "StackPriority" "1"
// data "SurfaceChange" "Ignite"
// data "TickType" "StartTurn"
// data "Boosts" "IF(ConditionResult(context.AttackWeapon.IsValid) or (context.Target.IsValid and Item()) or not (context.Target.IsValid or not Item(context.Source))):WeaponDamage(1d4, Fire);IF(Item(context.Source)):WeaponProperty(Unstowable);"
// data "TooltipDamage" "DealDamage(1d4,Fire)"
// data "TickFunctors" "IF(not Tagged('TORCH')):DealDamage(1d4,Fire)"
data "TickFunctors" "IF(not Tagged('TORCH') and StatusDurationLessThan(context.Target,'BURNING',2)):DealDamage(1d4,Fire);IF(not Tagged('TORCH') and Goon_StatusGroupDurationEqualTo(context.Target,'BURNING',2)):DealDamage(2d4,Fire);IF(not Tagged('TORCH') and Goon_StatusGroupDurationEqualTo(context.Target,'BURNING',3)):DealDamage(3d4,Fire);IF(not Tagged('TORCH') and Goon_StatusGroupDurationEqualTo(context.Target,'BURNING',4)):DealDamage(4d4,Fire);IF(not Tagged('TORCH') and Goon_StatusGroupDurationEqualTo(context.Target,'BURNING',5)):DealDamage(5d4,Fire);IF(not Tagged('TORCH') and Goon_StatusGroupDurationEqualTo(context.Target,'BURNING',6)):DealDamage(6d4,Fire);IF(not Tagged('TORCH') and Goon_StatusGroupDurationEqualTo(context.Target,'BURNING',7)):DealDamage(7d4,Fire);IF(not Tagged('TORCH') and Goon_StatusGroupDurationEqualTo(context.Target,'BURNING',8)):DealDamage(8d4,Fire);IF(not Tagged('TORCH') and Goon_StatusGroupDurationEqualTo(context.Target,'BURNING',9)):DealDamage(9d4,Fire);IF(not Tagged('TORCH') and Goon_StatusGroupDurationEqualTo(context.Target,'BURNING',10)):DealDamage(10d4,Fire)"
// data "StatusPropertyFlags" "InitiateCombat;Burning;DisableOverhead;IgnoreResting"
data "StatusPropertyFlags" "InitiateCombat;Burning;DisableOverhead;IgnoreResting;MultiplyEffectsByDuration"
// data "OnApplyFunctors" "IF(not Tagged('TORCH')):DealDamage(1d4,Fire)"
data "OnApplyFunctors" "IF(not Tagged('TORCH') and StatusDurationLessThan(context.Target,'BURNING',2)):DealDamage(1d4,Fire);IF(not Tagged('TORCH') and Goon_StatusGroupDurationEqualTo(context.Target,'BURNING',2)):DealDamage(2d4,Fire);IF(not Tagged('TORCH') and Goon_StatusGroupDurationEqualTo(context.Target,'BURNING',3)):DealDamage(3d4,Fire);IF(not Tagged('TORCH') and Goon_StatusGroupDurationEqualTo(context.Target,'BURNING',4)):DealDamage(4d4,Fire);IF(not Tagged('TORCH') and Goon_StatusGroupDurationEqualTo(context.Target,'BURNING',5)):DealDamage(5d4,Fire);IF(not Tagged('TORCH') and Goon_StatusGroupDurationEqualTo(context.Target,'BURNING',6)):DealDamage(6d4,Fire);IF(not Tagged('TORCH') and Goon_StatusGroupDurationEqualTo(context.Target,'BURNING',7)):DealDamage(7d4,Fire);IF(not Tagged('TORCH') and Goon_StatusGroupDurationEqualTo(context.Target,'BURNING',8)):DealDamage(8d4,Fire);IF(not Tagged('TORCH') and Goon_StatusGroupDurationEqualTo(context.Target,'BURNING',9)):DealDamage(9d4,Fire);IF(not Tagged('TORCH') and Goon_StatusGroupDurationEqualTo(context.Target,'BURNING',10)):DealDamage(10d4,Fire)"
// data "StatusGroups" "SG_Surface;SG_Light"
// data "StatusEffect" "2156dd48-f83b-4060-9a4e-cab994da8857"

// ==================================== Chilled ====================================
// Bug Fix: Now ignores resting like other conditions.
// Bug Fix: Application is now visible on character overheads and the combat log.

new entry "CHILLED"
type "StatusData"
data "StatusType" "BOOST"
using "CHILLED"
// // Chilled
// data "DisplayName" "h98420645g4a1fg4fbagb2dbga9290f2bd7f3;1"
// // Affected entity is <LSTag Tooltip="Vulnerable">Vulnerable</LSTag> to Cold damage and <LSTag Tooltip="Resistant">Resistant</LSTag> to Fire damage.
// data "Description" "h6fd44e80g60f8g4ce9gb8f4g52bdaf6f8b3f;3"
// data "Icon" "Status_Chilled"
// data "FormatColor" "Water"
// data "MaterialType" "FadingOverlay"
// data "MaterialApplyBody" "Yes"
// data "MaterialApplyArmor" "Yes"
// data "MaterialApplyWeapon" "No"
// data "MaterialApplyNormalMap" "Yes"
// data "MaterialFadeAmount" "3000"
// data "StackId" "CHILLED"
// data "Boosts" "Resistance(Fire, Resistant);Resistance(Cold, Vulnerable)"
// data "StatusPropertyFlags" "InitiateCombat;DisableCombatlog;DisableOverhead"
data "StatusPropertyFlags" "InitiateCombat;IgnoreResting"
// data "StatusGroups" "SG_Surface"