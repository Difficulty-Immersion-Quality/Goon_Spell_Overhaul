// DealDamage(LevelMapValue(D4Cantrip),Radiant,,,,ad727a13-c6f0-4b5b-aefd-aac79c6ed46e) <- "Conditional" handle



// ==================================== Acid Splash ====================================
// 2024 change: Swapped school from Conjuration to Evocation. Creates an acid surface, same as Chromatic Orb.

new entry "Projectile_AcidSplash"
type "SpellData"
data "SpellType" "Projectile"
using "Projectile_AcidSplash"
// data "SpellSchool" "Conjuration"
data "SpellSchool" "Evocation"
data "SpellProperties" "GROUND:CreateSurface(2,2,Acid)"

// ==================================== Blade Ward ====================================
// Casting Blade Ward is now a bonus action, whenever you take damage from a Bludgeoning, Piercing, or Slashing, the duration of Blade Ward is reduced by 1 turn.

new entry "Shout_BladeWard"
type "SpellData"
using "Shout_BladeWard"
// Take only half the damage from Bludgeoning, Piercing, and Slashing attacks.
// data "Description" "h44d589a1g7e6dg4975g9ebcgaa2e193d44e1;6"
// Take only half the damage from Bludgeoning, Piercing, and Slashing attacks. The duration of Blade Ward is reduced by 1 turn whenever Bludgeoning, Piercing, or Slashing damage is taken. 
data "Description" "h60442a32g02d3g436eg9868g6017ab4102c5;1"
// data "SpellProperties" "ApplyStatus(BLADE_WARD,100,2)"
data "SpellProperties" "ApplyStatus(GOON_BLADE_WARD_SPELL,100,3)"
// data "TooltipStatusApply" "ApplyStatus(BLADE_WARD,100,2)"
data "TooltipStatusApply" "ApplyStatus(GOON_BLADE_WARD_SPELL,100,3)"
// data "UseCosts" "ActionPoint:1"
data "UseCosts" "BonusActionPoint:1"

new entry "BLADE_WARD"
type "StatusData"
data "StatusType" "BOOST"
using "BLADE_WARD"
// Has &lt;LSTag Tooltip="Resistant"&gt;Resistance&lt;/LSTag&gt; against Bludgeoning, Piercing, and Slashing damage.
// data "Description" "hf3d9a553gad9bg4878ga30cg5da8e854cfbf;1"
// Has Resistance against Bludgeoning, Piercing, and Slashing damage from attacks.
data "Description" "h7dba990fg4de2g4617g8c42gb69d24df7656;1"

new entry "GOON_BLADE_WARD_SPELL"
type "StatusData"
data "StatusType" "BOOST"
using "BLADE_WARD"
// Has Resistance against Bludgeoning, Piercing, and Slashing damage.
// data "Description" "hbaec3368g3f8bg4577g8a7fg6c16b2059f18;4"
// Has Resistance against Bludgeoning, Piercing, and Slashing damage from attacks. When Bludgeoning, Piercing, or Slashing damage is taken from an attack, the duration of Blade Ward is reduced by 1.
data "Description" "hf3d9a553gad9bg4878ga30cg5da8e854cfbf;1"
data "Passives" "Goon_Blade_Ward_Spell"

new entry "Goon_Blade_Ward_Spell"
type "PassiveData"
data "Properties" "IsHidden"
// data "StatsFunctorContext" "OnAttacked"
// data "Conditions" "HasDamageEffectFlag(DamageFlags.Hit) and IsDamageTypeBludgeoning() or IsDamageTypePiercing() or IsDamageTypeSlashing()"
// data "StatsFunctors" "SetStatusDuration(GOON_BLADE_WARD_SPELL,-1,Add)"

// ==================================== Booming Blade ====================================
// Don't know why the multiple entries, but putting them both her for reference I guess

new entry "Target_BoomingBlade"
type "SpellData"
data "SpellType" "Target"
// using "Target_Slash_New"
using "Target_BoomingBlade"
data "DamageType" "Thunder"

new entry "Target_BoomingBlade_ClassSpell"
type "SpellData"
data "SpellType" "Target"
// using "Target_BoomingBlade"
using "Target_BoomingBlade_ClassSpell"
data "DamageType" "Thunder"

// ==================================== Bone Chill ====================================
// "Bone Chill" is now named "Chill Touch" and deals both Necrotic and Cold damage. The status effect is now named "Chill of the Grave" instead of "Bone Chilled". Can target objects and corpses.

new entry "Target_ChillTouch"
type "SpellData"
data "SpellType" "Target"
using "Target_ChillTouch"
// data "TargetConditions" "not Self() and not Dead() and (Character() or Tagged('FUNGUS'))"
data "TargetConditions" "not Self()"
// data "SpellSuccess" "ApplyStatus(CHILL_TOUCH,100,1);DealDamage(LevelMapValue(D8Cantrip), Necrotic,Magical)"
data "SpellSuccess" "ApplyStatus(CHILL_TOUCH,100,1);DealDamage(LevelMapValue(D4Cantrip), Necrotic,Magical);DealDamage(LevelMapValue(D4Cantrip), Cold,Magical)"
// Bone Chill
// data "DisplayName" "h9dd6c9edgef86g4aacg8d3dg172606a7be3f;1"
// Chill Touch
data "DisplayName" "h2e9c2b10g1ebdg47c7gaa08g2dcf6667cbbd;1"
// data "TooltipDamageList" "DealDamage(LevelMapValue(D8Cantrip), Necrotic)"
data "TooltipDamageList" "DealDamage(LevelMapValue(D4Cantrip), Necrotic);DealDamage(LevelMapValue(D4Cantrip), Cold)"
data "CombatAIOverrideSpell" "Target_ChillTouch_AI"

new entry "Target_ChillTouch_AI"
type "SpellData"
data "SpellType" "Projectile"
using "Target_ChillTouch"
data "TargetConditions" "not Self() and not Dead() and (Character() or Tagged('FUNGUS'))"

new entry "CHILL_TOUCH"
type "StatusData"
data "StatusType" "BOOST"
using "CHILL_TOUCH"
// Bone Chilled
// data "DisplayName" "hb2bd1a66gcbfcg4f2dg8b57g847b24ac7e01;1"
// Chill of the Grave
data "DisplayName" "h1eae12c3g5f79g491fgaa61g1af469829dc7;1"

// ==================================== Dancing Lights ====================================
// Make Dancing Lights copst a bonus action. Remove the concentration requirement. Make it last until long rest. Only one summon allowed at a time.

new entry "Target_DancingLights"
type "SpellData"
data "SpellType" "Target"
using "Target_DancingLights"
// data "SpellProperties" "GROUND:Summon(2064328c-a090-454f-b3b8-b488bbe64567, 10,,,,DANCING_LIGHTS)"
data "SpellProperties" "GROUND:Summon(2064328c-a090-454f-b3b8-b488bbe64567, -1,,,,DANCING_LIGHTS)"
data "AIFlags" "UseAsSupportingActionOnly"
// data "TooltipStatusApply" "ApplyStatus(DANCING_LIGHTS,100,10)"
data "TooltipStatusApply" "ApplyStatus(DANCING_LIGHTS,100,-1)"
// data "UseCosts" "ActionPoint:1"
data "UseCosts" "BonusActionPoint:1"
// data "SpellFlags" "HasVerbalComponent;HasSomaticComponent;IsConcentration;IsSpell;HasHighGroundRangeExtension;CannotTargetItems"
data "SpellFlags" "HasVerbalComponent;HasSomaticComponent;IsSpell;HasHighGroundRangeExtension;CannotTargetItems"
data "HitAnimationType" "None"

new entry "Target_DancingLights_DeepRothe"
type "SpellData"
data "SpellType" "Target"
// using "Target_DancingLights"
using "Target_DancingLights_DeepRothe"
// data "SpellFlags" "IsConcentration"
data "SpellFlags" ""

// Stop this inheriting of Long Rest duration so nutsack Sorcerous Sundries performers don't murder PCs with infinitely stacking Dancing Lights (It seems that "IsUnique" not being taken into account for the entitiy when cast via script, allowing them to stack.)
new entry "Target_LOW_EastwayWizards_DancingLights"
type "SpellData"
data "SpellType" "Target"
// using "Target_DancingLights"
using "Target_LOW_EastwayWizards_DancingLights"
// data "SpellProperties" "GROUND:Summon(2064328c-a090-454f-b3b8-b488bbe64567, -1,,,,DANCING_LIGHTS)"
data "SpellProperties" "GROUND:Summon(2064328c-a090-454f-b3b8-b488bbe64567, 10,,,,DANCING_LIGHTS)

new entry "DANCING_LIGHTS"
type "StatusData"
data "StatusType" "BOOST"
using "DANCING_LIGHTS"
data "IsUnique" "1"

// ==================================== Eldritch Blast ====================================
// Adjustable push targetting implemented. (Grasp of Hadar support does not need to be added to base entry.) Can target corpses.

new entry "Projectile_EldritchBlast"
type "SpellData"
data "SpellType" "Projectile"
using "Projectile_EldritchBlast"
// data "TargetConditions" "not Self() and not Dead()"
data "TargetConditions" "not Self()"
// data "SpellSuccess" "DealDamage(1d10,Force,Magical);IF(HasPassive('RepellingBlast',context.Source)):Force(4.5)"
data "SpellSuccess" "DealDamage(1d10,Force,Magical);IF(HasPassive('RepellingBlast',context.Source)):Force(4.5,OriginToTarget,Aggressive)"
data "CombatAIOverrideSpell" "Projectile_EldritchBlast_AI"

new entry "Projectile_EldritchBlast_AI"
type "SpellData"
data "SpellType" "Projectile"
using "Projectile_EldritchBlast"
data "TargetConditions" "not Self() and not Dead()"

// ==================================== Fire Bolt ====================================
// Damage reduced from 1d10 to 1d8. Only create a surface if the caster targets the surface directly, or if the target is standing on a flammable surface. Success applies Burning for 1 round, to mirror Ray of Frost. Targetting corpses allowed.

new entry "Projectile_FireBolt"
type "SpellData"
data "SpellType" "Projectile"
using "Projectile_FireBolt"
// data "TargetConditions" "not Self() and not Dead()"
data "TargetConditions" "not Self()"
// data "SpellProperties" "GROUND:SurfaceChange(Ignite);GROUND:SurfaceChange(Melt)"
data "SpellProperties" "ApplyStatus(SELF,GOON_SURFACE_CHECK,100,0);GROUND:IF(not HasStatus('GOON_SURFACE_CHECK',context.Source)):SurfaceChange(Ignite);TARGET:IF(InSurface('SurfaceAlcohol') or InSurface('SurfaceOil') or InSurface('SurfaceGrease') or InSurface('BloodExploding')):SurfaceChange(Ignite);GROUND:IF(not HasStatus('GOON_SURFACE_CHECK',context.Source)):SurfaceChange(Melt);TARGET:IF(InSurface('SurfaceWaterFrozen') or InSurface('SurfaceBloodFrozen')):SurfaceChange(Melt)"
// data "SpellSuccess" "DealDamage(LevelMapValue(D10Cantrip),Fire,Magical)"
data "SpellSuccess" "DealDamage(LevelMapValue(D8Cantrip),Fire,Magical);IF(HasStatus('BURNING')):SetStatusDuration(BURNING,1,Add);IF(not HasStatus('BURNING')):ApplyStatus(BURNING,100,1)"
data "CombatAIOverrideSpell" "Projectile_FireBolt_AI"

new entry "Projectile_FireBolt_AI"
type "SpellData"
data "SpellType" "Projectile"
using "Projectile_FireBolt"
data "TargetConditions" "not Self() and not Dead()"

// ==================================== Friends ====================================
// Now a bonus action. Can be used in combat to give a creature Disadvantage on attack rolls against you; the creature gets to make a Wisdom save against it in combat.
// TODO: Redesihgn charm spells and all that as a whole, no good trying to do this in a vaccuum

// new entry "Target_Friends"
// type "SpellData"
// data "SpellType" "Target"
// using "Target_Friends"
// // data "SpellProperties" "ApplyStatus(FRIENDS,100,10)"
// data "SpellProperties" "IF(not Combat()):ApplyStatus(FRIENDS,100,10);IF(Combat()):ApplyStatus(GOON_FRIENDS_COMBAT_SAVE,100,0);IF(HasStatus('FRIENDS',context.Target)):ApplyStatus(SELF,GOON_FRIENDS_TECHNICAL,100,10);IF(not HasStatus('FRIENDS',context.Target)):BreakConcentration(SELF)"
// // data "TargetConditions" "Character() and not Enemy()  and not Self()"
// data "TargetConditions" "Character() and not Self()"
// // Gain &lt;LSTag Tooltip="Advantage"&gt;Advantage&lt;/LSTag&gt; on Charisma &lt;LSTag Tooltip="AbilityCheck"&gt;Checks&lt;/LSTag&gt; against a non-hostile creature.
// // data "Description" "h21bab19cg2de1g46f5g9805g7fb58680f3ff;2"
// // Gain &lt;LSTag Tooltip="Advantage"&gt;Advantage&lt;/LSTag&gt; on Charisma &lt;LSTag Tooltip="AbilityCheck"&gt;Checks&lt;/LSTag&gt; against a non-hostile creature in dialogue. When targetting a hostile creature in combat, they must succeed a &lt;LSTag Tooltip="Wisdom"&gt;Wisdom&lt;/LSTag&gt; &lt;LSTag Tooltip="SavingThrow"&gt;Saving Throw&lt;/LSTag&gt; or suffer &lt;LSTag Tooltip="Disadvantage"&gt;Disadvantage&lt;/LSTag&gt; on &lt;LSTag Tooltip="AttackRoll"&gt;Attack Rolls&lt;/LSTag&gt; against you.
// data "Description" "h40d4759dga74ag4804gac41g65b19eb68b17;1"
// // data "UseCosts" "ActionPoint:1"
// data "UseCosts" "BonusActionPoint:1"

// new entry "FRIENDS"
// type "StatusData"
// data "StatusType" "BOOST"
// using "FRIENDS"
// // Has &lt;LSTag Tooltip="Advantage"&gt;Advantage&lt;/LSTag&gt; on Charisma &lt;LSTag Tooltip="AbilityCheck"&gt;Checks&lt;/LSTag&gt; directed at the target creature.
// // data "Description" "hf61260e8g3c54g48b7g9ce8gbf362d66d134;2"
// // The caster of this charm has &lt;LSTag Tooltip="Advantage"&gt;Advantage&lt;/LSTag&gt; on &lt;LSTag Tooltip="Charisma"&gt;Charisma&lt;/LSTag&gt; &lt;LSTag Tooltip="AbilityCheck"&gt;Checks&lt;/LSTag&gt; against the target. The target 
// data "Description" "hd51d6e1bg6d7cg4309ga03bgc0eade9ef864;1"
// // data "Boosts" "Advantage(SourceDialogue,Charisma)"
// data "Boosts" "Advantage(SourceDialogue,Charisma);IF(HasStatus('GOON_FRIENDS_TECHNICAL', context.Target)):Disadvantage(AttackRoll)"

// new entry "GOON_FRIENDS_COMBAT_SAVE"
// type "StatusData"
// data "StatusType" "BOOST"
// // Friends
// data "DisplayName" "h8f8a19a6gb008g490dgb644gb10fe05748fc;1"
// // The caster of this charm has &lt;LSTag Tooltip="Advantage"&gt;Advantage&lt;/LSTag&gt; on &lt;LSTag Tooltip="Charisma"&gt;Charisma&lt;/LSTag&gt; &lt;LSTag Tooltip="AbilityCheck"&gt;Checks&lt;/LSTag&gt; against the target.
// data "Description" "hd51d6e1bg6d7cg4309ga03bgc0eade9ef864;1"
// data "StatusPropertyFlags" "DisableOverhead;DisablePortraitIndicator;DisableCombatlog"
// data "OnApplyFunctors" "IF(not SavingThrow(Ability.Wisdom, SourceSpellDC())):ApplyStatus(FRIENDS,100,10)"

// new entry "GOON_FRIENDS_TECHNICAL"
// type "StatusData"
// data "StatusType" "BOOST"
// data "StatusPropertyFlags" "DisableOverhead;DisablePortraitIndicator;DisableCombatlog"

// ==================================== Guidance ====================================
// Lasts until long rest, still requires concentration. This makes it more effective for non-dialogue checks while exploring, as you don't have to cast it constantly. Also increase the range to 9m and remove the Melee spell property. Targetting enemies allowed. VFX and SFX now only stay for 1 round.

new entry "Target_Guidance"
type "SpellData"
data "SpellType" "Target"
using "Target_Guidance"
// data "TargetConditions" "Character() and Ally()"
data "TargetConditions" "Character()"
// data "SpellProperties" "ApplyStatus(GUIDANCE, 100, 10)"
data "SpellProperties" "ApplyStatus(GUIDANCE, 100, -1)"
// data "TargetRadius" "1.5"
data "TargetRadius" "9"
// data "TooltipStatusApply" "ApplyStatus(GUIDANCE, 100, 10)"
data "TooltipStatusApply" "ApplyStatus(GUIDANCE, 100, -1)"
// data "SpellFlags" "HasVerbalComponent;HasSomaticComponent;IsSpell;IsConcentration;IsMelee"
data "SpellFlags" "HasVerbalComponent;HasSomaticComponent;IsSpell;IsConcentration"
data "CombatAIOverrideSpell" "Target_Guidance_AI"

new entry "Target_Guidance_AI"
type "SpellData"
data "SpellType" "Projectile"
using "Target_Guidance"
data "TargetConditions" "Character() and Ally()"

new entry "GUIDANCE"
type "StatusData"
data "StatusType" "BOOST"
using "GUIDANCE"
data "OnApplyFunctors" "ApplyStatus(GOON_GUIDANCE_FX,100,1)"
// data "SoundLoop" "Spell_Status_Guidance_MO"
data "SoundLoop" ""
// data "ManagedStatusEffectGroup" "6435c10a-c67d-4f79-8813-b84b0762f92b"
data "ManagedStatusEffectGroup" ""

new entry "GOON_GUIDANCE_FX"
type "StatusData"
data "StatusType" "BOOST"
data "StatusPropertyFlags" "DisableOverhead;DisablePortraitIndicator;DisableCombatlog"
data "SoundLoop" "Spell_Status_Guidance_MO"
data "ManagedStatusEffectType" "Positive"
data "ManagedStatusEffectGroup" "6435c10a-c67d-4f79-8813-b84b0762f92b"

// ==================================== Light ====================================
// Make it a bonus action.
// TODO: Revisit this for a more elegant solution, with regards to AI making use of the spell, and it being functional in Wild shape.

new entry "Target_Light"
type "SpellData"
data "SpellType" "Target"
using "Target_Light"
// data "UseCosts" "ActionPoint:1"
data "UseCosts" "BonusActionPoint:1"

// ==================================== Mage Hand + Summons ====================================
// Remove arbitary summon cooldowns, replace with per combat, or remove the cooldown entirely.

// Rogue's Extra overwrites this entry's SpellProperties
new entry "Target_MageHand"
type "SpellData"
data "SpellType" "Target"
using "Target_MageHand"
// data "Cooldown" "OncePerRest"
data "Cooldown" ""

// Make it a spell no longer
new entry "Target_MageHand_GithyankiPsionics"
type "SpellData"
data "SpellType" "Target"
using "Target_MageHand_GithyankiPsionics"
// data "SpellSchool" "Conjuration"
data "SpellSchool" ""
// data "SpellFlags" "IsSpell;HasVerbalComponent;HasSomaticComponent;HasHighGroundRangeExtension;CannotTargetCharacter;CannotTargetItems"
data "SpellFlags" "HasHighGroundRangeExtension;CannotTargetCharacter;CannotTargetItems"
// data "Cooldown" "OncePerRest"
data "Cooldown" ""

// ==================================== Minor Illusion ====================================
// Costs a bonus action, illusions last until long rest. You can only have one summoned at a time, per vanilla.

new entry "Target_MinorIllusion"
type "SpellData"
data "SpellType" "Target"
using "Target_MinorIllusion"
// data "SpellProperties" "GROUND:Summon(a4d03902-0382-4f88-866d-3bb2225a69a3, 10,,,'MinorIllusionStack',MINOR_ILLUSION)"
data "SpellProperties" "GROUND:Summon(a4d03902-0382-4f88-866d-3bb2225a69a3, -1,,,'MinorIllusionStack',MINOR_ILLUSION)"
// data "TooltipStatusApply" "ApplyStatus(MINOR_ILLUSION,100,10)"
data "TooltipStatusApply" "ApplyStatus(MINOR_ILLUSION,100,-1)"
// data "UseCosts" "ActionPoint:1"
data "UseCosts" "BonusActionPoint:1"

// ==================================== Poison Spray ====================================
// Change school from Conjuration to Necromancy, per 2024. Turn into a cone instead of a single target projectile. Reduce damage die from 1d12 to 1d10. Now creates a poison surface too.
// TODO: Probably just have it closer to 2024 version, but with surface creation, poison cloud or something

new entry "Projectile_PoisonSpray"
type "SpellData"
// data "SpellType" "Projectile"
data "SpellType" "Zone"
// data "SurfaceType" ""
data "SurfaceType" "PoisonCloud"
// data "SurfaceLifetime" ""
data "SurfaceLifetime" "3"
// data "SurfaceGrowStep" ""
data "SurfaceGrowStep" "5"
// data "SurfaceGrowInterval" ""
data "SurfaceGrowInterval" "10"
data "Level" "0"
// data "SpellSchool" "Conjuration"
data "SpellSchool" "Necromancy"
// data "TargetFloor" "-1"
data "TargetFloor" ""
// data "TargetRadius" "3"
data "TargetRadius" ""
data "SpellRoll" "not SavingThrow(Ability.Constitution, SourceSpellDC(),AdvantageOnPoisoned())"
// data "SpellSuccess" "DealDamage(LevelMapValue(D12Cantrip),Poison,Magical)"
data "SpellSuccess" "DealDamage(LevelMapValue(D10Cantrip),Poison,Magical);ApplyStatus(POISONED,100,1)"
// data "SpellFail" "IF(HasPassive('PotentCantrip',context.Source)):DealDamage((LevelMapValue(D12Cantrip))/2,Poison,Magical); IF(not HasPassive('PotentCantrip',context.Source)):ApplyStatus(SAVED_AGAINST_HOSTILE_SPELL, 100, 0)"
data "SpellFail" "IF(HasPassive('PotentCantrip',context.Source)):DealDamage((LevelMapValue(D10Cantrip))/2,Poison,Magical);IF(not HasPassive('PotentCantrip',context.Source)):ApplyStatus(SAVED_AGAINST_HOSTILE_SPELL, 100, 0)"
// data "TargetConditions" "not Self() and not Dead()"
data "TargetConditions" ""
// data "ProjectileCount" "1"
data "ProjectileCount" ""
// data "Trajectories" "2b5bc94d-d60b-402e-92a3-76e6f2ba5fce"
data "Trajectories" ""
data "Icon" "Spell_Conjuration_PoisonSpray"
// Poison Spray
data "DisplayName" "h07618e62g5a92g4e09gaaa9gad303a7d5674;1"
// Project a puff of noxious gas.
// data "Description" "he2f86eb4g6905g465ag916dge1eaefd62e3f;3"
// Project a cone of noxious gas, leaving behind a cloud of poison.
data "Description" "h1be0ac47g18f5g4945g85b9g41ab74c32552;1"
// data "TooltipDamageList" "DealDamage(LevelMapValue(D12Cantrip),Poison)"
data "TooltipDamageList" "DealDamage(LevelMapValue(D10Cantrip),Poison)"
data "TooltipAttackSave" "Constitution"
data "CastSound" "Spell_Cast_Damage_Poison_PoisonSpray_L0"
data "CastTextEvent" "Cast"
data "CycleConditions" "Enemy() and not Dead()"
data "UseCosts" "ActionPoint:1"
data "SpellAnimation" "3ff87abf-1ea1-4c32-aadf-c822d74c7dc0,,;,,;d30d2b40-c45a-45bd-94d7-9b2baaf0f77b,,;a601b33c-5320-455d-b4d4-74d6dc35b757,,;d8925ce4-d6d9-400c-92f5-ad772ef7f178,,;,,;eadedcce-d01b-4fbb-a1ae-d218f13aa5d6,,;,,;,,"
data "VerbalIntent" "Damage"
// data "SpellFlags" "IsSpell;HasHighGroundRangeExtension;HasVerbalComponent;HasSomaticComponent;IsHarmful"
data "SpellFlags" "HasSomaticComponent;HasVerbalComponent;IsSpell;IsHarmful;CanAreaDamageEvade"
data "HitAnimationType" "MagicalDamage_Internal"
// data "Shape" ""
data "Shape" "Cone"
// data "Range" ""
data "Range" "5"
// data "Angle" ""
data "Angle" "60"
data "PrepareEffect" "61249cfa-bb68-4fd4-9517-b527fe7dbdce"
// data "CastEffect" "11f94ff7-9c1b-431a-a26b-99e157026dee"
data "CastEffect" "334876ed-be5d-43d4-85db-c143c393e5ac"
// data "TargetEffect" ""
data "TargetEffect" "41c997d7-a298-482c-befb-bdedc4c78d3e"
data "DamageType" "Poison"

// ==================================== Produce Flame ====================================
// Added cantrip scaling to the tooltip, as it should have been. Summoning costs a bonus action, and dismissing is free. There is no longer a free hurl on the turn you summon the flame. Hurling the flame does not dismiss the status. Interacts with surfaces and applies burning same as Fire Bolt. In addition, creates its own fire surface if targetting the ground. Damage increased to 1d10 from 1d8. Targetting corpses allowed.

new entry "Shout_ProduceFlame"
type "SpellData"
data "SpellType" "Shout"
using "Shout_ProduceFlame"
// data "SpellProperties" "ApplyStatus(PRODUCE_FLAME,100,-1);ApplyStatus(PRODUCE_FLAME_HURL_FREE,100,1)"
data "SpellProperties" "ApplyStatus(PRODUCE_FLAME,100,-1);ApplyStatus(PRODUCE_FLAME_HURL,100,-1)"
// data "DescriptionParams" "Distance(9);DealDamage(1d8,Fire)"
data "DescriptionParams" "Distance(18);DealDamage(LevelMapValue(D10Cantrip),Fire)"
// data "TooltipStatusApply" "ApplyStatus(PRODUCE_FLAME,100,-1)"
data "TooltipStatusApply" "ApplyStatus(PRODUCE_FLAME,100,-1);ApplyStatus(PRODUCE_FLAME_HURL,100,-1)"
// data "UseCosts" "ActionPoint:1"
data "UseCosts" "BonusActionPoint:1"

new entry "Shout_ProduceFlame_Dismiss"
type "SpellData"
data "SpellType" "Shout"
using "Shout_ProduceFlame_Dismiss"
// data "UseCosts" "ActionPoint:1"
data "UseCosts" ""

new entry "Projectile_ProduceFlame_Hurl"
type "SpellData"
data "SpellType" "Projectile"
using "Projectile_ProduceFlame_Hurl"
// data "SpellProperties" "GROUND:RemoveStatus(SELF,PRODUCE_FLAME);GROUND:RemoveStatus(SELF,PRODUCE_FLAME_HURL);GROUND:RemoveStatus(SELF,PRODUCE_FLAME_HURL_FREE);GROUND:SurfaceChange(Ignite);GROUND:SurfaceChange(Melt)"
data "SpellProperties" "ApplyStatus(SELF,GOON_SURFACE_CHECK,100,0);GROUND:IF(not HasStatus('GOON_SURFACE_CHECK',context.Source)):SurfaceChange(Ignite);TARGET:IF(InSurface('SurfaceAlcohol') or InSurface('SurfaceOil') or InSurface('SurfaceGrease') or InSurface('BloodExploding')):SurfaceChange(Ignite);GROUND:IF(not HasStatus('GOON_SURFACE_CHECK',context.Source)):SurfaceChange(Melt);TARGET:IF(InSurface('SurfaceWaterFrozen') or InSurface('SurfaceBloodFrozen')):SurfaceChange(Melt);GROUND:IF(not HasStatus('GOON_SURFACE_CHECK',context.Source)):CreateSurface(2,3,Fire)"
// data "TargetConditions" "not Self() and not Dead()"
// data "SpellSuccess" "IF(not HasPassive('PotentSpellcasting',context.Source)):DealDamage(LevelMapValue(D8Cantrip),Fire,Magical);IF(HasPassive('PotentSpellcasting',context.Source)):DealDamage(LevelMapValue(D8Cantrip)+(max(0, WisdomModifier)),Fire,Magical)"
data "SpellSuccess" "IF(not HasPassive('PotentSpellcasting',context.Source)):DealDamage(LevelMapValue(D10Cantrip),Fire,Magical);IF(HasPassive('PotentSpellcasting',context.Source)):DealDamage(LevelMapValue(D10Cantrip)+(max(0, WisdomModifier)),Fire,Magical);IF(HasStatus('BURNING')):SetStatusDuration(BURNING,1,Add);IF(not HasStatus('BURNING')):ApplyStatus(BURNING,100,1)"
// data "TooltipDamageList" "DealDamage(LevelMapValue(D8Cantrip),Fire)"
data "TooltipDamageList" "DealDamage(LevelMapValue(D10Cantrip),Fire)"
data "TargetConditions" "not Self()"
data "CombatAIOverrideSpell" "Projectile_ProduceFlame_Hurl_AI"

new entry "Projectile_ProduceFlame_Hurl_AI"
type "SpellData"
data "SpellType" "Projectile"
using "Projectile_ProduceFlame_Hurl"
data "TargetConditions" "not Self() and not Dead()"

// ==================================== Ray of Frost ====================================
// Only change a surface if the caster targets the surface directly, or if the target is standing on an appropriate surface. Damage increased to 1d10 from 1d8. Targetting corpses allowed.

new entry "Projectile_RayOfFrost"
type "SpellData"
data "SpellType" "Projectile"
using "Projectile_RayOfFrost"
// data "TargetConditions" "not Self() and not Dead()"
data "TargetConditions" "not Self()"
// data "SpellProperties" "GROUND:SurfaceChange(Freeze);GROUND:SurfaceChange(Douse)"
data "SpellProperties" "ApplyStatus(SELF,GOON_SURFACE_CHECK,100,0);GROUND:IF(not HasStatus('GOON_SURFACE_CHECK',context.Source)):SurfaceChange(Freeze);TARGET:IF(InSurface('SurfaceWater') or InSurface('SurfaceWaterElectrified') or InSurface('SurfaceBlood') or InSurface('SurfaceBloodElectrified') or InSurface('SurfaceSewer') or InSurface('SurfaceAlcohol') or InSurface('SurfaceDeepwater')):SurfaceChange(Freeze);GROUND:IF(not HasStatus('GOON_SURFACE_CHECK',context.Source)):SurfaceChange(Douse);TARGET:IF(InSurface('SurfaceFire')):SurfaceChange(Douse);RemoveStatus(BURNING)"
// data "SpellSuccess" "DealDamage(LevelMapValue(D8Cantrip),Cold,Magical);ApplyStatus(RAY_OF_FROST,100,1)"
data "SpellSuccess" "DealDamage(LevelMapValue(D10Cantrip),Cold,Magical);ApplyStatus(RAY_OF_FROST,100,1)"
// data "TargetConditions" "not Self() and not Dead()"
data "TargetConditions" "not Self()"
// data "TooltipDamageList" "DealDamage(LevelMapValue(D8Cantrip),Cold)"
data "TooltipDamageList" "DealDamage(LevelMapValue(D10Cantrip),Cold)"
data "CombatAIOverrideSpell" "Projectile_RayOfFrost_AI"

new entry "Projectile_RayOfFrost_AI"
type "SpellData"
data "SpellType" "Projectile"
using "Projectile_RayOfFrost"
data "TargetConditions" "not Self() and not Dead()"

// ==================================== Resistance ====================================
// Use a hidden technical status to make the VFX temporary, and last only for 1 round.

new entry "RESISTANCE"
type "StatusData"
data "StatusType" "BOOST"
using "RESISTANCE"
data "OnApplyFunctors" "ApplyStatus(GOON_RESISTANCE_FX,100,1)"
// data "StatusEffect" "95231805-3d66-4061-9cf6-8cbbc48d6732"
data "StatusEffect" ""
// data "ManagedStatusEffectGroup" "6435c10a-c67d-4f79-8813-b84b0762f92b"
data "ManagedStatusEffectGroup" ""

new entry "GOON_RESISTANCE_FX"
type "StatusData"
data "StatusType" "BOOST"
data "StatusPropertyFlags" "DisableOverhead;DisablePortraitIndicator;DisableCombatlog"
data "StatusEffect" "95231805-3d66-4061-9cf6-8cbbc48d6732"
data "ManagedStatusEffectType" "Positive"
data "ManagedStatusEffectGroup" "6435c10a-c67d-4f79-8813-b84b0762f92b"

// ==================================== Sacred Flame ====================================
// Damage increased to 1d10 from 1d8. On a success applies Holy Fire to Fiends, Fey and Undead; mirror's Fire Bolt and Produce Flame. Interacts with surfaces same as Fire Bolt and Produce Flame. Targetting objects and corpses allowed.

new entry "Target_SacredFlame"
type "SpellData"
data "SpellType" "Target"
using "Target_SacredFlame"
data "SpellProperties" "ApplyStatus(SELF,GOON_SURFACE_CHECK,100,0);GROUND:IF(not HasStatus('GOON_SURFACE_CHECK',context.Source)):SurfaceChange(Ignite);TARGET:IF(InSurface('SurfaceAlcohol') or InSurface('SurfaceOil') or InSurface('SurfaceGrease') or InSurface('BloodExploding')):SurfaceChange(Ignite);GROUND:IF(not HasStatus('GOON_SURFACE_CHECK',context.Source)):SurfaceChange(Melt);TARGET:IF(InSurface('SurfaceWaterFrozen') or InSurface('SurfaceBloodFrozen')):SurfaceChange(Melt)"
// data "SpellSuccess" "DealDamage(LevelMapValue(D8Cantrip),Radiant,Magical)"
data "SpellSuccess" "DealDamage(LevelMapValue(D10Cantrip),Radiant,Magical);IF(Tagged('SHADOW') or Tagged('UNDEAD_BEAST') or Tagged('FIEND') or Tagged('UNDEAD') and HasStatus('BURNING_HOLY')):SetStatusDuration(BURNING_HOLY,1,Add);IF(Tagged('SHADOW') or Tagged('UNDEAD_BEAST') or Tagged('FIEND') or Tagged('UNDEAD') and not HasStatus('BURNING_HOLY')):ApplyStatus(BURNING_HOLY,100,1)"
// data "SpellFail" "IF(HasPassive('PotentCantrip',context.Source)):DealDamage((LevelMapValue(D8Cantrip))/2,Radiant,Magical); IF(not HasPassive('PotentCantrip',context.Source)):ApplyStatus(SAVED_AGAINST_HOSTILE_SPELL, 100, 0)"
data "SpellFail" "IF(HasPassive('PotentCantrip',context.Source)):DealDamage((LevelMapValue(D10Cantrip))/2,Radiant,Magical);IF(not HasPassive('PotentCantrip',context.Source)):ApplyStatus(SAVED_AGAINST_HOSTILE_SPELL, 100, 0)"
// data "TargetConditions" "Character() and not Self()"
data "TargetConditions" "not Self()"
// Engulf a target in a flame-like radiance.
// data "Description" "h75ab1b63ge88dg4c53gb30fg3c6a9a790a00;2"
// Engulf a target in a flame-like radiance. If the target is a Fiend, or Undead, they are afflicted with &lt;LSTag Type="Status" Tooltip="BURNING_HOLY"&gt;Holy Fire&lt;/LSTag&gt;.&lt;br&gt;&lt;br&gt;Targeting the ground directly will create a holy fire surface.
data "Description" "h910058dcg21d0g4f89ga09cg47bd468ece71;1"
data "DescriptionParams" "DealDamage(1d4, Radiant)"
// data "TooltipDamageList" "DealDamage(LevelMapValue(D8Cantrip),Radiant)"
data "TooltipDamageList" "DealDamage(LevelMapValue(D10Cantrip),Radiant)"
data "TooltipStatusApply" "ApplyStatus(BURNING_HOLY,100,1)"
data "CombatAIOverrideSpell" "Target_SacredFlame_AI"

new entry "Target_SacredFlame_AI"
type "SpellData"
data "SpellType" "Projectile"
using "Target_SacredFlame"
data "TargetConditions" "Character() and not Self()"

// ==================================== Shillelagh ====================================
// Scales from 1d8 to 1d10 at level 5, 1d12 at level 11, and 2d6 at level 17. Works with staff, club, mace, javelin, dart, spear, or trident. Lasts until long rest. Can be cast on allies. Only one Shillelagh can be active at a time, per caster. The wielder can cancel the effect at will (AI will not cancel the effect).

new entry "Shout_Shillelagh"
type "SpellData"
// data "SpellType" "Shout"
data "SpellType" "Target"
data "Level" "0"
data "SpellSchool" "Transmutation"
// data "SpellProperties" "IF(IsWeaponOfProficiencyGroup('Clubs|Quarterstaffs', GetActiveWeapon())):ApplyEquipmentStatus(MainHand, SHILLELAGH, 100, 10);IF(not IsWeaponOfProficiencyGroup('Clubs|Quarterstaffs', GetActiveWeapon()) and IsWeaponOfProficiencyGroup('Clubs|Quarterstaffs', GetActiveWeapon(context.Target, false))):ApplyEquipmentStatus(OffHand, SHILLELAGH, 100, 10);AI_ONLY:IF(not HasStatus('SHILLELAGH',GetActiveWeapon())):ApplyStatus(AI_HELPER_SHILLELAGH,100,-1)"
data "SpellProperties" "IF(Item() and IsWeaponOfProficiencyGroup('Clubs|Greatclubs|Quarterstaffs|Maces|Javelins|Darts|Spears|Tridents')):ApplyStatus(SHILLELAGH,100,-1);IF(Self() and not Item() and IsWeaponOfProficiencyGroup('Clubs|Greatclubs|Quarterstaffs|Maces|Javelins|Darts|Spears|Tridents', GetActiveWeapon(context.Target, true))):ApplyEquipmentStatus(MainHand,SHILLELAGH,100,-1);IF(Self() and not Item() and not IsWeaponOfProficiencyGroup('Clubs|Greatclubs|Quarterstaffs|Maces|Javelins|Darts|Spears|Tridents', GetActiveWeapon(context.Target, true)) and IsWeaponOfProficiencyGroup('Clubs|Greatclubs|Quarterstaffs|Maces|Javelins|Darts|Spears|Tridents', GetActiveWeapon(context.Target, false))):ApplyEquipmentStatus(OffHand,SHILLELAGH,100,-1);IF(not Self() and not Item() and IsWeaponOfProficiencyGroup('Clubs|Greatclubs|Quarterstaffs|Maces|Javelins|Darts|Spears|Tridents', GetActiveWeapon(context.Target, true))):ApplyEquipmentStatus(MainHand,SHILLELAGH,100,-1);IF(not Self() and not Item() and not IsWeaponOfProficiencyGroup('Clubs|Greatclubs|Quarterstaffs|Maces|Javelins|Darts|Spears|Tridents', GetActiveWeapon(context.Target, true)) and IsWeaponOfProficiencyGroup('Clubs|Greatclubs|Quarterstaffs|Maces|Javelins|Darts|Spears|Tridents', GetActiveWeapon(context.Target, false))):ApplyEquipmentStatus(OffHand,SHILLELAGH,100,-1);AI_ONLY:IF(not HasStatus('SHILLELAGH',GetActiveWeapon(context.Target, true)) and not HasStatus('SHILLELAGH',GetActiveWeapon(context.Target, false))):ApplyStatus(AI_HELPER_SHILLELAGH,100,-1)"
data "TargetCeiling" "0"
data "TargetFloor" ".25"
data "TargetRadius" "1.5"
// data "TargetConditions" "Self()"
data "TargetConditions" "Character() or Item()"
data "Icon" "Spell_Abjuration_Transmutation_Shillelagh"
// Shillelagh
data "DisplayName" "h88189f48ga78cg4a13ga52fg9c789a31c49e;1"
// Your staff or club becomes magical: it deals [5], and uses your <LSTag Tooltip="SpellcastingAbilityModifier">Spellcasting Ability</LSTag> for <LSTag Tooltip="AttackRoll">Attack Rolls</LSTag>.
// data "Description" "hebb3bf5dg7eeeg44b7g9c75gd7ac6b4e3ce3;6"
// You target a creature's equipped weapon, or a staff, club, mace, javelin, dart, spear, or trident directly; it becomes magical and deals [5]. The weapon uses the wielder's &lt;LSTag Tooltip="SpellcastingAbilityModifier"&gt;Spellcasting Ability&lt;/LSTag&gt; for &lt;LSTag Tooltip="AttackRoll"&gt;Attack&lt;/LSTag&gt; and damage rolls.&lt;br&gt;&lt;br&gt;Damage begins at [1], increasing to [2] at level 5, [3] at level 11, and [4] at level 17.
data "Description" "h9e33ef27g4b4eg46c6gb365g6694c23fb2f0;1"
// data "DescriptionParams" "DealDamage(1d8+SpellCastingAbilityModifier, Bludgeoning)"
data "DescriptionParams" "DealDamage(1d8+SpellCastingAbilityModifier,Bludgeoning);DealDamage(1d10+SpellCastingAbilityModifier,Bludgeoning);DealDamage(1d12+SpellCastingAbilityModifier,Bludgeoning);DealDamage(2d6+SpellCastingAbilityModifier,Bludgeoning);DealDamage(,Bludgeoning)"
data "TooltipDamageList" "DealDamage(LevelMapValue(GoonShillelagh)+SpellCastingAbilityModifier, Bludgeoning)"
// data "TooltipStatusApply" "ApplyStatus(SHILLELAGH, 100, 10)"
data "TooltipStatusApply" "ApplyStatus(SHILLELAGH, 100, -1)"
data "CastSound" "Spell_Cast_Buff_Shillelagh_L0"
data "TargetSound" "Spell_Impact_Buff_Shillelagh_L0"
data "VocalComponentSound" "Vocal_Component_EnchantWeapon"
// data "PreviewCursor" ""
data "PreviewCursor" "Cast"
data "CastTextEvent" "Cast"
// data "AlternativeCastTextEvents" ""
data "AlternativeCastTextEvents" "CastOffhand"
data "UseCosts" "BonusActionPoint:1"
// data "SpellAnimation" "8b8bb757-21ce-4e02-a2f3-97d55cf2f90b,,;,,;35b644cf-5c13-4407-9dc1-23bf4309216e,,;823e3ddf-c670-41ef-b7b4-9f4a4e38300b,,;7bb52cd4-0b1c-4926-9165-fa92b75876a3,,;,,;0b07883a-08b8-43b6-ac18-84dc9e84ff50,,;,,;,,"
data "SpellAnimation" "03496c4a-49e0-4132-b585-3e5ecd1ad8e5,,;,,;dada6495-752c-4f30-a503-f05b8c811e2b,,;8ce53f9b-b559-49cd-9607-1991545060d7,,;a9682ef9-5d9e-4ac0-8144-2c7fe6eb868c,,;,,;32fb4d91-7fde-4b05-9144-ea87b9a4284a,,;,,;,,"
data "VerbalIntent" "Buff"
data "WeaponTypes" "Melee"
data "SpellFlags" "HasVerbalComponent;IsMelee;IsSpell;HasSomaticComponent"
data "SpellAnimationIntentType" "Aggressive"
// data "RequirementConditions" "IsWeaponOfProficiencyGroup('Clubs|Quarterstaffs', GetItemInEquipmentSlot(EquipmentSlot.MeleeMainHand)) or IsWeaponOfProficiencyGroup('Clubs|Quarterstaffs', GetItemInEquipmentSlot(EquipmentSlot.MeleeOffHand))"
// data "RequirementEvents" "OnEquip;OnUnequip"
data "PrepareEffect" "e8109f4b-2439-4424-9bc8-743270220f47"
data "CastEffect" "53c9d361-0fc1-4d72-a70b-bc2611d538f0"
data "Sheathing" "Melee"
// data "MaximumTargets" ""
data "MaximumTargets" "1"
// data "HitAnimationType" ""
data "HitAnimationType" "None"

new entry "SHILLELAGH"
type "StatusData"
data "StatusType" "BOOST"
using "SHILLELAGH"
// Weapon is magical and deals [5]. &lt;LSTag Tooltip="AttackRoll"&gt;Attack Rolls&lt;/LSTag&gt; use the wielder's &lt;LSTag Tooltip="SpellcastingAbilityModifier"&gt;Spellcasting Ability Modifier&lt;/LSTag&gt;.&lt;br&gt;&lt;br&gt;Damage begins at [1], increasing to [2] at level 5, [3] at level 11, and [4] at level 17.
data "Description" "hab375000gaeb1g47dfg9d34ga2a778b28194;1"
// data "DescriptionParams" "DealDamage(1d8+SpellCastingAbility, Bludgeoning)"
data "DescriptionParams" "DealDamage(1d8+SpellCastingAbilityModifier,Bludgeoning);DealDamage(1d10+SpellCastingAbilityModifier,Bludgeoning);DealDamage(1d12+SpellCastingAbilityModifier,Bludgeoning);DealDamage(2d6+SpellCastingAbilityModifier,Bludgeoning);DealDamage(,Bludgeoning)"
// data "Boosts" "WeaponProperty(Magical);WeaponDamageDieOverride(1d8);WeaponAttackRollAbilityOverride(SpellCastingAbility);Attribute(InventoryBound)"
data "Boosts" "WeaponProperty(Magical);WeaponDamageTypeOverride(Bludgeoning);WeaponAttackRollAbilityOverride(SpellCastingAbility);IF(not CharacterLevelGreaterThan(4,GetOwner(context.Source))):WeaponDamageDieOverride(1d8);IF(CharacterLevelGreaterThan(4,GetOwner(context.Source)) and not CharacterLevelGreaterThan(9,GetOwner(context.Source))):WeaponDamageDieOverride(1d10);IF(CharacterLevelGreaterThan(10,GetOwner(context.Source)) and not CharacterLevelGreaterThan(17,GetOwner(context.Source))):WeaponDamageDieOverride(1d12);IF(CharacterLevelGreaterThan(17,GetOwner(context.Source))):WeaponDamageDieOverride(2d6)"
// data "RemoveConditions" ""
data "RemoveConditions" "HasStatus('GOON_SHILLELAGH_REMOVAL_TECHNICAL')"
// data "RemoveEvents" ""
data "RemoveEvents" "OnStatusApplied"
// data "Passives" ""
// data "Passives" "Goon_Remove_Shillelagh_Passive"
// data "IsUnique" ""
data "IsUnique" "1"

// Custom entries for handling removal
new entry "Goon_Remove_Shillelagh_Passive"
type "PassiveData"
data "Properties" "IsHidden"
data "BoostContext" "OnStatusApplied;OnStatusApply;OnStatusRemoved;OnStatusRemove;OnEquip;OnCreate;OnInventoryChanged;OnCast;OnHealed;OnDamaged"
data "Boosts" "IF(HasStatus('SHILLELAGH',GetItemInEquipmentSlot(EquipmentSlot.MeleeMainHand)) or HasStatus('SHILLELAGH',GetItemInEquipmentSlot(EquipmentSlot.MeleeOffHand)) or HasStatus('SHILLELAGH_DRYAD',GetItemInEquipmentSlot(EquipmentSlot.MeleeMainHand)) or HasStatus('SHILLELAGH_DRYAD',GetItemInEquipmentSlot(EquipmentSlot.MeleeOffHand))):UnlockSpell(Goon_Shout_Remove_Shillelagh)"

new entry "Goon_Shout_Remove_Shillelagh"
type "SpellData"
data "SpellType" "Shout"
data "SpellProperties" "AI_IGNORE:ApplyEquipmentStatus(MainHand,GOON_SHILLELAGH_REMOVAL_TECHNICAL,100,0);AI_IGNORE:ApplyEquipmentStatus(OffHand,GOON_SHILLELAGH_REMOVAL_TECHNICAL,100,0)"
data "Icon" "Spell_Abjuration_Transmutation_Shillelagh"
data "DisplayName" "h871c4f36g3d7fg4798ga7ecg05fd146c364c;1"
data "Description" "h1ee9b7a0ge6a5g407bgb29cgbe27ad5d4221;1"
data "CastSound" "Spell_Cast_Buff_Shillelagh_L0"
data "TargetSound" "Spell_Impact_Buff_Shillelagh_L0"
data "SpellAnimation" "8b8bb757-21ce-4e02-a2f3-97d55cf2f90b,,;,,;35b644cf-5c13-4407-9dc1-23bf4309216e,,;823e3ddf-c670-41ef-b7b4-9f4a4e38300b,,;7bb52cd4-0b1c-4926-9165-fa92b75876a3,,;,,;0b07883a-08b8-43b6-ac18-84dc9e84ff50,,;,,;,,"
data "SpellFlags" "Temporary"
data "PrepareEffect" "e8109f4b-2439-4424-9bc8-743270220f47"
data "CastEffect" "53c9d361-0fc1-4d72-a70b-bc2611d538f0"
data "RequirementConditions" "Player(context.Source)"

new entry "GOON_SHILLELAGH_REMOVAL_TECHNICAL"
type "StatusData"
data "StatusType" "BOOST"
data "StatusPropertyFlags" "DisableOverhead;DisablePortraitIndicator;DisableCombatlog"

new entry "GOON_SHILLELAGH_DUMMY_UNLOCK_REMOVAL"
type "StatusData"
data "StatusType" "BOOST"
data "StatusPropertyFlags" "DisableOverhead;DisablePortraitIndicator;DisableCombatlog"

new entry "GOON_SHILLELAGH_DUMMY_UNLOCK_REMOVAL_2"
type "StatusData"
data "StatusType" "BOOST"
data "StatusPropertyFlags" "DisableOverhead;DisablePortraitIndicator;DisableCombatlog"

// Shit inheriting from Shillelagh
new entry "Shout_Shillelagh_Dryad"
type "SpellData"
// data "SpellType" "Shout"
data "SpellType" "Target"
using "Shout_Shillelagh"
data "Level" ""
data "SpellSchool" ""
// data "SpellProperties" "IF(IsWeaponOfProficiencyGroup('Clubs|Quarterstaffs', GetActiveWeapon())):ApplyEquipmentStatus(MainHand, SHILLELAGH_DRYAD, 100, 10);IF(not IsWeaponOfProficiencyGroup('Clubs|Quarterstaffs', GetActiveWeapon()) and IsWeaponOfProficiencyGroup('Clubs|Quarterstaffs', GetActiveWeapon(context.Target, false))):ApplyEquipmentStatus(OffHand, SHILLELAGH_DRYAD, 100, 10);AI_ONLY:IF(not HasStatus('SHILLELAGH_DRYAD',GetActiveWeapon())):ApplyStatus(AI_HELPER_SHILLELAGH,100,-1)"
data "SpellProperties" "IF(Item() and IsWeaponOfProficiencyGroup('Clubs|Greatclubs|Quarterstaffs|Maces|Javelins|Darts|Spears|Tridents')):ApplyStatus(SHILLELAGH_DRYAD,100,-1);IF(not Item() and IsWeaponOfProficiencyGroup('Clubs|Greatclubs|Quarterstaffs|Maces|Javelins|Darts|Spears|Tridents', GetActiveWeapon())):ApplyEquipmentStatus(MainHand,SHILLELAGH_DRYAD,100,-1);IF(not IsWeaponOfProficiencyGroup('Clubs|Greatclubs|Quarterstaffs|Maces|Javelins|Darts|Spears|Tridents', GetActiveWeapon()) and IsWeaponOfProficiencyGroup('Clubs|Greatclubs|Quarterstaffs|Maces|Javelins|Darts|Spears|Tridents', GetActiveWeapon(context.Target, false))):ApplyEquipmentStatus(OffHand,SHILLELAGH_DRYAD,100,-1);AI_ONLY:IF(not HasStatus('SHILLELAGH_DRYAD',GetActiveWeapon())):ApplyStatus(AI_HELPER_SHILLELAGH,100,-1)"
data "Icon" "Action_Monster_Dryad_Shillelagh"
// Strengthened Shillelagh
data "DisplayName" "h09951a86gfbe8g44c8g90ecg818674bc3995;1"
// Your staff or club becomes magical: it deals [1], and uses your <LSTag Tooltip="SpellcastingAbilityModifier">Spellcasting Ability</LSTag> for <LSTag Tooltip="AttackRoll">Attack Rolls</LSTag>.
data "Description" "hebb3bf5dg7eeeg44b7g9c75gd7ac6b4e3ce3;6"
data "DescriptionParams" "DealDamage(4d8+SpellCastingAbilityModifier, Bludgeoning)"
// data "TooltipStatusApply" "ApplyStatus(SHILLELAGH_DRYAD, 100, 10)"
data "TooltipStatusApply" "ApplyStatus(SHILLELAGH_DRYAD, 100, -1)"
data "CastSound" "CrSpell_Cast_Dryad_Shillelagh"
data "PrepareEffect" "3400259d-131e-42ed-a447-4578933d76de"
data "CastEffect" "b34ed591-57e1-44f0-8a25-a0a4a040bbf9"
data "CombatAIOverrideSpell" "Shout_Shillelagh_Dryad_AI"

new entry "Shout_Shillelagh_Dryad_AI"
type "SpellData"
data "SpellType" "Projectile"
using "Shout_Shillelagh_Dryad"
data "TargetConditions" "Self()"

new entry "SHILLELAGH_DRYAD"
type "StatusData"
data "StatusType" "BOOST"
// using "SHILLELAGH"
using "SHILLELAGH_DRYAD"
// data "Boosts" "WeaponProperty(Magical);WeaponDamageDieOverride(4d8);WeaponAttackRollAbilityOverride(SpellCastingAbility);Attribute(InventoryBound)"
data "Boosts" "WeaponProperty(Magical);WeaponDamageDieOverride(4d8);WeaponAttackRollAbilityOverride(SpellCastingAbility)"

// Why does this shit even inherit my god
new entry "Shout_MAG_Harpers_SingingSword_Container"
type "SpellData"
data "SpellType" "Shout"
// using "Shout_Shillelagh"
using "Shout_MAG_Harpers_SingingSword_Container"
data "SpellProperties" ""
data "TargetConditions" "Self()"
data "TooltipDamageList" ""
data "CastSound" "Spell_Cast_Buff_Shillelagh_L0"
data "TargetSound" "Spell_Impact_Buff_Shillelagh_L0"
data "VocalComponentSound" "Vocal_Component_EnchantWeapon"
data "CastTextEvent" "Cast"
data "SpellAnimation" "8b8bb757-21ce-4e02-a2f3-97d55cf2f90b,,;,,;35b644cf-5c13-4407-9dc1-23bf4309216e,,;823e3ddf-c670-41ef-b7b4-9f4a4e38300b,,;7bb52cd4-0b1c-4926-9165-fa92b75876a3,,;,,;0b07883a-08b8-43b6-ac18-84dc9e84ff50,,;,,;,,"
data "VerbalIntent" "Buff"
data "WeaponTypes" "Melee"
data "SpellAnimationIntentType" "Aggressive"
data "PrepareEffect" "e8109f4b-2439-4424-9bc8-743270220f47"
data "CastEffect" "53c9d361-0fc1-4d72-a70b-bc2611d538f0"
data "Sheathing" "Melee"
data "MaximumTargets" ""

new entry "Shout_MAG_Harpers_SingingSword_Shriek"
type "SpellData"
data "SpellType" "Shout"
// using "Shout_Shillelagh"
using "Shout_MAG_Harpers_SingingSword_Shriek"
data "TargetConditions" "Self()"
data "TooltipDamageList" ""
data "SpellAnimation" "8b8bb757-21ce-4e02-a2f3-97d55cf2f90b,,;,,;35b644cf-5c13-4407-9dc1-23bf4309216e,,;823e3ddf-c670-41ef-b7b4-9f4a4e38300b,,;7bb52cd4-0b1c-4926-9165-fa92b75876a3,,;,,;0b07883a-08b8-43b6-ac18-84dc9e84ff50,,;,,;,,"
data "Sheathing" "Melee"
data "MaximumTargets" ""

new entry "Shout_MAG_Harpers_SingingSword_Sing"
type "SpellData"
data "SpellType" "Shout"
// using "Shout_Shillelagh"
using "Shout_MAG_Harpers_SingingSword_Sing"
data "TargetConditions" "Self()"
data "TooltipDamageList" ""
data "SpellAnimation" "8b8bb757-21ce-4e02-a2f3-97d55cf2f90b,,;,,;35b644cf-5c13-4407-9dc1-23bf4309216e,,;823e3ddf-c670-41ef-b7b4-9f4a4e38300b,,;7bb52cd4-0b1c-4926-9165-fa92b75876a3,,;,,;0b07883a-08b8-43b6-ac18-84dc9e84ff50,,;,,;,,"
data "Sheathing" "Melee"
data "MaximumTargets" ""

// ==================================== Shocking Grasp ====================================
// Increased damage from 1d8 to 1d10. Overhauled the surface interactions to be more consistent with other spells. Can now target corpses.

new entry "Target_ShockingGrasp"
type "SpellData"
data "SpellType" "Target"
using "Target_ShockingGrasp"
// data "SpellProperties" "GROUND:SurfaceChange(Electrify)"
data "SpellProperties" "ApplyStatus(SELF,GOON_SURFACE_CHECK,100,0);GROUND:IF(not HasStatus('GOON_SURFACE_CHECK',context.Source)):SurfaceChange(Electrify);TARGET:IF(InSurface('SurfaceWater') or InSurface('SurfaceBlood') or InSurface('SurfaceSewer') or InSurface('SurfaceAlcohol') or InSurface('SurfaceDeepwater') or InSurface('WaterCloud')):SurfaceChange(Electrify)"
// data "SpellSuccess" "ApplyStatus(SHOCKING_GRASP,100,1);DealDamage(LevelMapValue(D8Cantrip),Lightning,Magical)"
data "SpellSuccess" "ApplyStatus(SHOCKING_GRASP,100,1);DealDamage(LevelMapValue(D10Cantrip),Lightning,Magical)"
// data "TargetConditions" "not Self() and not Dead()"
data "TargetConditions" "not Self()"
// data "DescriptionParams" "DealDamage(LevelMapValue(D8Cantrip),Lightning)"
data "DescriptionParams" "DealDamage(LevelMapValue(D10Cantrip),Lightning)"
// data "TooltipDamageList" "DealDamage(LevelMapValue(D8Cantrip),Lightning)"
data "TooltipDamageList" "DealDamage(LevelMapValue(D10Cantrip),Lightning)"

// ==================================== Thaumatergy ====================================
// No changes for now.

// ==================================== Thorn Whip ====================================
// Adjustable pull targeting, with increased range on the pull. Can target everything but self. Increased damage from 1d6 to 1d10.
// Bleeding could be interesting here?

new entry "Target_ThornWhip"
type "SpellData"
data "SpellType" "Target"
using "Target_ThornWhip"
data "SpellRoll" "Attack(AttackType.MeleeSpellAttack)"
// data "SpellSuccess" "TARGET:IF(not Grounded() and TargetSizeEqualOrSmaller(Size.Large)):Force(-3, OriginToEntity, Neutral, false, true); DealDamage(LevelMapValue(D6Cantrip),Piercing,Magical);"
data "SpellSuccess" "TARGET:IF(not Grounded() and TargetSizeEqualOrSmaller(Size.Large)):Force(-5, OriginToTarget, Neutral); DealDamage(LevelMapValue(D10Cantrip),Piercing,Magical);"
// data "TargetConditions" "not Self() and (Item() or Character() or Dead())"
data "TargetConditions" "not Self()"
// data "DescriptionParams" "Distance(3)"
data "DescriptionParams" "Distance(5)"
// data "TooltipDamageList" "DealDamage(LevelMapValue(D6Cantrip),Piercing);"
data "TooltipDamageList" "DealDamage(LevelMapValue(D10Cantrip),Piercing)"
data "CombatAIOverrideSpell" "Target_ThornWhip_AI"

new entry "Target_ThornWhip_AI"
type "SpellData"
data "SpellType" "Projectile"
using "Target_ThornWhip"
data "TargetConditions" "not Self() and (Item() or Character() or Dead())"

// ==================================== True Strike ====================================
// Now costs a bonus action. Advantage is now only granted if the target fails an Intelligence saving throw, using the caster's spell DC. The target always has their AC reduced by the caster's proficiency bonus, and half on a successful save(rounded up). But the effect and its duration is reduced by 1 each time they are attacked.

new entry "Target_TrueStrike"
type "SpellData"
data "SpellType" "Target"
using "Target_TrueStrike"
data "SpellRoll" "not SavingThrow(Ability.Intelligence, SourceSpellDC())"
data "SpellSuccess" "ApplyStatus(TRUE_STRIKE,100,1);ApplyStatus(SELF,TRUE_STRIKE_OWNER,100,1);IF(not CharacterLevelGreaterThan(4,context.Source)):ApplyStatus(GOON_TRUE_STRIKE,100,2);IF(CharacterLevelGreaterThan(4,context.Source) and not CharacterLevelGreaterThan(8,context.Source)):ApplyStatus(GOON_TRUE_STRIKE,100,3);IF(CharacterLevelGreaterThan(8,context.Source) and not CharacterLevelGreaterThan(13,context.Source)):ApplyStatus(GOON_TRUE_STRIKE,100,4);IF(CharacterLevelGreaterThan(13,context.Source) and not CharacterLevelGreaterThan(17,context.Source)):ApplyStatus(GOON_TRUE_STRIKE,100,5);IF(CharacterLevelGreaterThan(17,context.Source)):ApplyStatus(GOON_TRUE_STRIKE,100,6)"
// data "SpellProperties" "ApplyStatus(TRUE_STRIKE,100,2);ApplyStatus(SELF,TRUE_STRIKE_OWNER,100,2)"
data "SpellProperties" ""
data "SpellFail" "IF(not CharacterLevelGreaterThan(4,context.Source)):ApplyStatus(GOON_TRUE_STRIKE,100,1);IF(CharacterLevelGreaterThan(4,context.Source) and not CharacterLevelGreaterThan(8,context.Source) and not CharacterLevelGreaterThan(13,context.Source)):ApplyStatus(GOON_TRUE_STRIKE,100,2);IF(CharacterLevelGreaterThan(8,context.Source)):ApplyStatus(GOON_TRUE_STRIKE,100,2);IF(CharacterLevelGreaterThan(13,context.Source) and not CharacterLevelGreaterThan(17,context.Source)):ApplyStatus(GOON_TRUE_STRIKE,100,3);IF(CharacterLevelGreaterThan(17,context.Source)):ApplyStatus(GOON_TRUE_STRIKE,100,3);ApplyStatus(SAVED_AGAINST_HOSTILE_SPELL,100,0)"
// Gain &lt;LSTag Tooltip="Advantage"&gt;Advantage&lt;/LSTag&gt; on your next &lt;LSTag Tooltip="AttackRoll"&gt;Attack Roll&lt;/LSTag&gt;.
// data "Description" "he014b03bg6138g431dga1ecg45e4ebba4869;2"
// If the target creature fails an &lt;LSTag Tooltip="Intelligence"&gt;Intelligence&lt;/LSTag&gt; &lt;LSTag Tooltip="SavingThrow"&gt;Saving Throw&lt;/LSTag&gt;, the caster gains &lt;LSTag Tooltip="Advantage"&gt;Advantage&lt;/LSTag&gt;, on their next &lt;LSTag Tooltip="AttackRoll"&gt;Attack Roll&lt;/LSTag&gt; against the target. Additionally, their &lt;LSTag Tooltip="ArmourClass"&gt;Armour Class&lt;/LSTag&gt; is reduced equal to your &lt;LSTag Tooltip="ProficiencyBonus"&gt;Proficiency Bonus&lt;/LSTag&gt;, or half of your your &lt;LSTag Tooltip="ProficiencyBonus"&gt;Proficiency Bonus&lt;/LSTag&gt; on a successful save. Whenever the target is attacked this effect and its duration is reduced by 1.
data "Description" "h7f444266g81afg4e0eg95d8g90b8876bf040;1"
// data "TooltipStatusApply" "ApplyStatus(TRUE_STRIKE,100,2)"
data "TooltipStatusApply" "ApplyStatus(TRUE_STRIKE,100,1);ApplyStatus(GOON_TRUE_STRIKE,100,1)"
// data "UseCosts" "ActionPoint:1"
data "UseCosts" "BonusActionPoint:1"

// Custom
new entry "GOON_TRUE_STRIKE"
type "StatusData"
data "StatusType" "BOOST"
// Open Defenses
data "DisplayName" "h6cc73e50gf680g4b25ga7d5g12f31475c508;1"
// &lt;LSTag Tooltip="ArmourClass"&gt;Armour Class&lt;/LSTag&gt; is reduced by the duration of the effect. Whenever the creature is attacked the duration is reduced by 1.
data "Description" "h9a4f4618g7ae6g4741g9519gb03d2851d055;1"
data "Icon" "Spell_Divination_TrueStrike"
data "StackId" "GOON_TRUE_STRIKE"
data "StackType" "Additive"
data "Boosts" "AC(-1)"
data "StatusPropertyFlags" "FreezeDuration;MultiplyEffectsByDuration"
data "Passives" "Goon_True_Strike"

new entry "Goon_True_Strike"
type "PassiveData"
data "Properties" "IsHidden"
data "StatsFunctorContext" "OnAttacked"
data "Conditions" ""
data "StatsFunctors" "SetStatusDuration(GOON_TRUE_STRIKE,-1,Add)"

// ==================================== Vicious Mockery ====================================
// Fixed syntax error in "SpellFail". Increased damage from 1d4 to 1d8. Allow free targeting. AI will only target enemies. (What if I want to RP yell at an inanimate object)

new entry "Target_ViciousMockery"
type "SpellData"
data "SpellType" "Target"
using "Target_ViciousMockery"
// data "SpellSuccess" "ApplyStatus(VICIOUSMOCKERY,100,1);DealDamage(LevelMapValue(D4Cantrip),Psychic,Magical)"
data "SpellSuccess" "IF(Character(context.Target)):ApplyStatus(VICIOUSMOCKERY,100,1);IF(Character(context.Target)):DealDamage(LevelMapValue(D8Cantrip),Psychic,Magical)"
// data "SpellFail" "IF(HasPassive('PotentCantrip',context.Source)):DealDamage((LevelMapValue(D4Cantrip))/2,Psychic,Magical), IF(not HasPassive('PotentCantrip',context.Source)):ApplyStatus(SAVED_AGAINST_HOSTILE_SPELL,100,0)"
data "SpellFail" "IF(HasPassive('PotentCantrip',context.Source) and Character(context.Target)):DealDamage((LevelMapValue(D8Cantrip))/2,Psychic,Magical);IF(not HasPassive('PotentCantrip',context.Source)):ApplyStatus(SAVED_AGAINST_HOSTILE_SPELL,100,0)"
// data "TargetConditions" "Character() and not Ally()"
data "TargetConditions" "not Self()"
// data "TooltipDamageList" "DealDamage(LevelMapValue(D4Cantrip),Psychic)"
data "TooltipDamageList" "DealDamage(LevelMapValue(D8Cantrip),Psychic)"
data "CombatAIOverrideSpell" "Target_ViciousMockery_AI"

new entry "Target_ViciousMockery_AI"
type "SpellData"
data "SpellType" "Projectile"
using "Target_ViciousMockery"
data "TargetConditions" "Character() and not Ally()"